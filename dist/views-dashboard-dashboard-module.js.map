{"version":3,"sources":["./src/app/views/dashboard/dashboard.component.html","./src/app/views/dashboard/dashboard-routing.module.ts","./src/app/views/dashboard/dashboard.component.ts","./src/app/views/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"views-dashboard-dashboard-module.js","sourcesContent":["export default \"<div class=\\\"animated fadeIn\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          {{'dashboard_header' | translate}}\\n        </div>\\n        <div class=\\\"card-header\\\">\\n          <button type=\\\"button\\\" (click)=\\\"goToAddExamConfig()\\\" class=\\\"btn btn-sm btn-primary\\\"><i class=\\\"fa fa-dot-circle-o\\\"></i>{{'add_test' | translate}}</button>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <br>\\n          <table class=\\\"table table-responsive-sm table-hover table-outline mb-0\\\">\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th class=\\\"text-center\\\"><i class=\\\"icon-people\\\"></i></th>\\n                <th class=\\\"text-left\\\">{{'test_name' | translate}}</th>\\n                <th class=\\\"text-left\\\">{{'test_title' | translate}}</th>\\n                <th class=\\\"text-center\\\">{{'candidate' | translate}}</th>\\n                <th class=\\\"text-center\\\">{{'question' | translate}}</th>\\n                <th class=\\\"text-center\\\">{{'edit' | translate}}</th>\\n                <th class=\\\"text-center\\\">{{'delete' | translate}}</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let examConfig of examConfigs; let idx = index\\\">\\n                <td class=\\\"text-center\\\">\\n                  <div>{{idx +1}}</div>\\n                </td>\\n                <td class=\\\"text-left\\\">\\n                  <div>{{examConfig.exam_name}}</div>\\n                </td>\\n                <td class=\\\"text-left\\\">\\n                  {{examConfig.exam_title}}\\n                </td>\\n                <td>\\n                  <button type=\\\"button\\\" (click)=\\\"goToCandidates(examConfig.id)\\\" class=\\\"btn btn-block btn-warning\\\">\\n                    <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                    {{'candidates' | translate}}\\n                  </button>\\n                </td>\\n                <td>\\n                  <button type=\\\"button\\\" (click)=\\\"goToQuestions(examConfig.id)\\\" class=\\\"btn btn-block btn-warning\\\">\\n                    <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                    {{'questions' | translate}}\\n                  </button>\\n                </td>\\n                <td class=\\\"text-center\\\">\\n                  <button type=\\\"button\\\" (click)=\\\"goToEditExamConfig(examConfig.id)\\\" class=\\\"btn btn-block btn-info\\\">\\n                    <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                    {{'edit' | translate}}\\n                  </button>\\n                </td>\\n                <td>           \\n                  <button type=\\\"button\\\" (click)=\\\"confirmDialog(examConfig.id)\\\" class=\\\"btn btn-block btn-danger\\\">\\n                    <span *ngIf=\\\"loading\\\" class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                    {{'delete' | translate}}\\n                  </button>                 \\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div><!--/.col-->\\n  </div><!--/.row-->\\n</div>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardComponent } from './dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    data: {\n      title: 'Dashboard'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AlertService } from '../../_services/alert.service';\nimport { ExamConfigService } from '../../_services/exam-config.service';\nimport { AuthenticationService } from '../../_services/authentication.service';\nimport { ExamConfig } from '../../_models/exam_config';\nimport { first } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent, ConfirmDialogModel } from '../../_components/confirm-dialog/confirm-dialog.component';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  templateUrl: 'dashboard.component.html'\n})\nexport class DashboardComponent implements OnInit {\n  loading = false;\n  examConfigs: ExamConfig[];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    public dialog: MatDialog,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private examConfigService: ExamConfigService,\n    private alertService: AlertService,\n    public translate: TranslateService\n  ) {\n\n  }\n  ngOnInit() {\n    this.examConfigs = []\n    this.examConfigService.get_exam_config_list()\n    .pipe(first())\n    .subscribe(\n        data => {      \n          this.examConfigs = data;  \n          console.log(this.examConfigs);\n        },\n        error => {\n            this.alertService.error(error);\n            this.loading = false;\n        });\n  }\n  goToEditExamConfig(id) {\n    this.router.navigate(['/theme/exam_config', id]);\n  } \n  goToAddExamConfig() {\n    this.router.navigate(['/theme/exam_config', 0]);\n  }\n  goToCandidates(id) {\n    this.router.navigate(['/theme/candidatelist', id]);\n  }\n\n  goToQuestions(id) {\n    this.router.navigate(['/theme/questionlist', id]);\n  }\n\n  confirmDialog(exam_config_id): void {\n    const message = `confirm_delete`;\n\n    const dialogData = new ConfirmDialogModel(\"Confirm Action\", message);\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"400px\",\n      data: dialogData\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      this.loading = true;\n      if(dialogResult){\n        this.examConfigService.delete_exam_config(exam_config_id)\n        .pipe(first())\n        .subscribe(\n            data => {\n                this.alertService.success(\"SUC0004\");\n                this.loading = false;\n                this.examConfigs = this.examConfigs.filter(item => item.id !== exam_config_id);\n                this.router.navigate(['dashboard']);\n            },\n            error => {\n                this.alertService.error(error);\n                this.loading = false;\n            });\n      }else{\n        this.loading = false;\n      }\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\n\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { CommonModule } from '@angular/common';\n\nimport { ConfirmDialogComponent } from '../../_components/confirm-dialog/confirm-dialog.component';\nimport { CustomMaterialModule } from '../../_components/custom-material/custom-material.module';\nimport { SharedModule } from '../../shared.module';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    DashboardRoutingModule,\n    BsDropdownModule,\n    CommonModule,\n    CustomMaterialModule,\n    ButtonsModule.forRoot(),\n    SharedModule\n  ],\n  declarations: [ DashboardComponent]\n})\nexport class DashboardModule { }\n"],"sourceRoot":"webpack:///"}